name: Build and Publish Container Images and NPM packages

on:
  push:
    branches: ["main"]
    tags: ["v*"]

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository_owner }}
  IMAGE_NAME: rejot-cli

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push rejot-cli image
      - name: Extract metadata for rejot-cli image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      - name: Build and push rejot-cli image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            REJOT_APP=rejot-cli
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation for rejot-cli
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  publish-npm:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        package:
          - path: packages/adapter-postgres
            name: "@rejot-dev/adapter-postgres"
          - path: packages/contract
            name: "@rejot-dev/contract"
          - path: packages/sync
            name: "@rejot-dev/sync"
          - path: apps/rejot-cli
            name: "@rejot-dev/cli"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.8
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: bun install

      - name: Publish package
        working-directory: ${{ matrix.package.path }}
        run: bun publish --access public
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
